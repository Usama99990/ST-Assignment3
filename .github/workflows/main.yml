name: Java CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger when code is pushed to 'main' branch
      - master # Trigger when code is pushed to 'master' branch
  pull_request:
    branches:
      - main  # Trigger for pull requests targeting 'main' branch
      - master # Trigger for pull requests targeting 'master' branch

jobs:
  build:
    runs-on: ubuntu-latest  # Runs the workflow on the latest Ubuntu runner
    
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: softwaretesting
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-timeout=5s
          --health-retries=3

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Java (JDK 11 or other versions)
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adoptopenjdk'

      # Step 3: Install MySQL client and run setup.sql to initialize the database
      - name: Install MySQL client
        run: sudo apt-get install mysql-client

      - name: Wait for MySQL to be ready
        run: |
          while ! mysqladmin ping --host=127.0.0.1 --user=root --password=root --silent; do
            echo "Waiting for MySQL..."
            sleep 5
          done

      - name: Run setup.sql
        run: mysql --host=127.0.0.1 --user=root --password=root softwaretesting < setup.sql

      # Step 4: Build the project using Maven
      - name: Build with Maven
        run: mvn clean install  # Assuming you're using Maven for building

      # Step 5: Run tests with Maven
      - name: Run tests with Maven
        run: mvn test  # This will run the tests using Maven's test phase

  # Step 6: Ensure that the branch protection rule is set (done from the GitHub UI)
